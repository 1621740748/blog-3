#dev 数据库连接环境 mysql7
spring:
  datasource :
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blog?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&serverTimezone=UTC
    username: root
    password: root
    ##  Hikari 连接池配置 ------ 详细配置请访问：https://github.com/brettwooldridge/HikariCP
    hikari: #一种数据库连接池、性能几乎是C3P0、DBCP的25倍
      maxLifetime: 1765000 #池中连接最长生命周期
      maximumPoolSize: 15 #池中最大连接数，包括闲置和使用中的连接
      pool-name: HikariCP #连接池名称
    #druid连接池配置
    druid:
      #引用上面的JDBC配置
      url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driverClassName}
      #配置初始化连接数大小
      initial-size: 10
      # 最大连接数
      max-active: 50
      #最小连接数
      min-idle: 10
      #获取连接等待超时时间
      max-wait: 5000
      pool-prepared-statements: true #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 20000
      test-on-borrow: false #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-while-idle: true #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      time-between-eviction-runs-millis: 60000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000  #一个连接在池中最小生存的时间，单位是毫秒
      #通过connectionProperties属性来打开mergeSql功能；慢sql记录
      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # StatViewServlet配置。（因为暴露的监控信息比较敏感，支持密码加密和访问ip限定）
      stat-view-servlet:
        # 是否启用WebStatFilter
        enabled: true
        # 访问路径
        url-pattern: "/druid/*"
        # 排除不必要的url
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico"
        # 监控最大session数，默认是1000
        session-stat-max-count: 1000
        # 是否启用session的统计功能
        session-stat-enable: true
        # 是否启用监控单个Url调用的sql列表
        profile-enable: true
        # 使druid当前session的用户是谁，session_user_key是你保存到session中的sessionName
        principalSessionName: session_user_key
        # 使druid只当当前的user是谁,cookie_user_key是你保存在cookie中的cookieName
        principalCookieName: cookie_user_key
        #可以增加访问账号密码【去掉注释就可以】
        #login-username: admin
        #login-password: admin
      filter:
        # 监控统计
        stat:
          # 数据库类型
          db-type: mysql
          # 慢SQL
          log-slow-sql: true
          # 慢SQL执行时间
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true