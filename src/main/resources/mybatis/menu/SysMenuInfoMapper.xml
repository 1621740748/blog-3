<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.sys.menu.mapper.SysMenuInfoMapper">
  <resultMap id="BaseResultMap" type="com.blog.sys.menu.model.SysMenuInfo">
    <id column="menu_id" jdbcType="VARCHAR" property="menuId" />
    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="target" jdbcType="VARCHAR" property="target" />
    <result column="menu_type" jdbcType="CHAR" property="menuType" />
    <result column="visible" jdbcType="CHAR" property="visible" />
    <result column="perms" jdbcType="VARCHAR" property="perms" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    menu_id, menu_name, parent_id, order_num, url, target, menu_type, visible, perms, 
    icon, create_by, create_time, update_by, update_time, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_menu_info
    where menu_id = #{menuId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_menu_info
    where menu_id = #{menuId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.blog.sys.menu.model.SysMenuInfo">
    insert into sys_menu_info (menu_id, menu_name, parent_id, 
      order_num, url, target, 
      menu_type, visible, perms, 
      icon, create_by, create_time, 
      update_by, update_time, remark
      )
    values (#{menuId,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{orderNum,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{target,jdbcType=VARCHAR}, 
      #{menuType,jdbcType=CHAR}, #{visible,jdbcType=CHAR}, #{perms,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.sys.menu.model.SysMenuInfo">
    insert into sys_menu_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="menuName != null">
        menu_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="target != null">
        target,
      </if>
      <if test="menuType != null">
        menu_type,
      </if>
      <if test="visible != null">
        visible,
      </if>
      <if test="perms != null">
        perms,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        #{menuId,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null">
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="target != null">
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null">
        #{menuType,jdbcType=CHAR},
      </if>
      <if test="visible != null">
        #{visible,jdbcType=CHAR},
      </if>
      <if test="perms != null">
        #{perms,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.sys.menu.model.SysMenuInfo">
    update sys_menu_info
    <set>
      <if test="menuName != null">
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="target != null">
        target = #{target,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null">
        menu_type = #{menuType,jdbcType=CHAR},
      </if>
      <if test="visible != null">
        visible = #{visible,jdbcType=CHAR},
      </if>
      <if test="perms != null">
        perms = #{perms,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where menu_id = #{menuId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.sys.menu.model.SysMenuInfo">
    update sys_menu_info
    set menu_name = #{menuName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      target = #{target,jdbcType=VARCHAR},
      menu_type = #{menuType,jdbcType=CHAR},
      visible = #{visible,jdbcType=CHAR},
      perms = #{perms,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where menu_id = #{menuId,jdbcType=VARCHAR}
  </update>
<!-- 获取所有菜单列表数据 -->
  <select id="getMenuList" parameterType="com.blog.sys.menu.model.SysMenuInfo" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_menu_info
    <where>
      <if test="vo.menuName != null and vo.menuName != ''">
        AND menu_name like concat('%', #{vo.menuName}, '%')
      </if>
      <if test="vo.visible != null and vo.visible != ''">
        AND visible = #{vo.visible}
      </if>
    </where>
    order by order_num
  </select>
<!--  获取同级别的最大排序码-->
  <select id="getMaxSortByParentId" parameterType="String" resultType="INTEGER">
    select IFNULL(MAX(order_num),0)
    from sys_menu_info where parent_id =#{parentId}
  </select>

  <!--  获取同级别的最大排序码-->
  <select id="checkMenuNameUnique" parameterType="String" resultMap="BaseResultMap" >
    select menu_id,parent_id,menu_name
    from sys_menu_info where parent_id =#{parentId} and menu_name = #{menuName}
  </select>
  <!-- 通过主键查询菜单信息 包含父级菜单名称 -->
  <select id="getMenuInfoById" parameterType="String" resultType="com.blog.sys.menu.model.SysMenuInfo">
    select
        smi.menu_id menuId, smi.menu_name menuName, smi.parent_id parentId, smi.order_num orderNum, smi.url, smi.target, smi.menu_type menuType, smi.visible,
        smi.perms,smi.icon, smi.create_by createBy, smi.create_time createTime, smi.update_by updateBy, smi.update_time updateTime, smi.remark,
        (select menu_name FROM sys_menu_info where menu_id = smi.parent_id) parentName
    from sys_menu_info smi
    where menu_id = #{menuId}
  </select>
  <!--  通过主键id查询其子菜单数据-->
  <select id="getChildMenuInfoById" parameterType="String" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List"/>
    from sys_menu_info where parent_id =#{menu_id}
  </select>

  <!-- 获取所有的菜单数据 -->
  <select id="selectMenuAll"  resultMap="BaseResultMap" >
    select <include refid="Base_Column_List"/>
    from sys_menu_info
    order by order_num
  </select>

  <!-- 通过用户id获取用户所拥有的菜单权限数据-->
  <select id="selectMenuAllByUserId" parameterType="String" resultType="com.blog.sys.menu.model.SysMenuInfo" >
    select distinct
      smi.menu_id menuId, smi.menu_name menuName, smi.parent_id parentId, smi.order_num orderNum, smi.url,
      smi.target, smi.menu_type menuType, smi.visible,smi.perms,smi.icon, smi.create_by createBy,
      smi.create_time createTime, smi.update_by updateBy, smi.update_time updateTime, smi.remark
    from sys_menu_info smi
    left join sys_role_menu srm on srm.menu_id = smi.menu_id
    left join sys_user_role sur on sur.role_id = srm.role_id
    where sur.user_id = #{userId}
    order by order_num
  </select>

  <!-- 通过角色id获取角色拥有的菜单权限-->
  <select id="selectMenuTree" parameterType="String" resultType="String" >
    select concat(smi.menu_id, ifnull(smi.perms,'')) as perms
	from sys_menu_info smi
	left join sys_role_menu srm on smi.menu_id = srm.menu_id
	where srm.role_id = #{roleId}
	order by  smi.order_num
  </select>
  <!-- 查询用户的功能权限 -->
  <select id="getMenuParamsByUserId" parameterType="String" resultType="String" >
      SELECT
           distinct smi.perms
      FROM sys_menu_info AS smi
      LEFT JOIN sys_role_menu AS srm  ON smi.menu_id=srm.menu_id
      LEFT JOIN  sys_user_role AS sur ON sur.role_id=srm.role_id
      WHERE sur.user_id=#{userId}
  </select>

<!--通过用户id获取所拥有的目录和菜单； flag true查询所有菜单和功能点  false查询目录和菜单-->
  <select id="getMenuListByUserId" parameterType="String" resultMap="BaseResultMap" >
    SELECT
    smi.menu_id,smi.menu_name,smi.parent_id,smi.order_num,smi.url,smi.target,smi.menu_type,smi.visible,smi.perms,smi.icon,
    smi.create_by,smi.create_time,smi.update_by,smi.update_time,smi.remark
    FROM sys_menu_info AS smi
    INNER JOIN sys_role_menu AS srm  ON smi.menu_id=srm.menu_id
    INNER JOIN  sys_user_role AS sur ON sur.role_id=srm.role_id
    <where>
      <if test="flag != null and flag == false ">
        and  smi.menu_type in ("M","C")
      </if>
      <if test="userId != null and userId != '' ">
        and  sur.user_id=#{userId}
      </if>
    </where>
    ORDER BY smi.order_num
  </select>

<!--  flag true查询所有菜单和功能点  false查询目录和菜单-->
  <select id="getMenuParamsList" parameterType="String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from sys_menu_info
    <where>
      <if test="flag != null and flag == false ">
        and  menu_type in ("M","C")
      </if>
    </where>
    ORDER BY order_num
  </select>


</mapper>