<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.sys.role.mapper.SysRoleInfoMapper">
  <resultMap id="BaseResultMap" type="com.blog.sys.role.model.SysRoleInfo">
    <id column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_key" jdbcType="VARCHAR" property="roleKey" />
    <result column="role_sort" jdbcType="INTEGER" property="roleSort" />
    <result column="data_scope" jdbcType="CHAR" property="dataScope" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, role_key, role_sort, data_scope, status, del_flag, create_by, 
    create_time, update_by, update_time, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role_info
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_role_info
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.blog.sys.role.model.SysRoleInfo">
    insert into sys_role_info (role_id, role_name, role_key, 
      role_sort, data_scope, status, 
      del_flag, create_by, create_time, 
      update_by, update_time, remark
      )
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleKey,jdbcType=VARCHAR}, 
      #{roleSort,jdbcType=INTEGER}, #{dataScope,jdbcType=CHAR}, #{status,jdbcType=CHAR}, 
      #{delFlag,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.sys.role.model.SysRoleInfo">
    insert into sys_role_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleKey != null">
        role_key,
      </if>
      <if test="roleSort != null">
        role_sort,
      </if>
      <if test="dataScope != null">
        data_scope,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleKey != null">
        #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null">
        #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="dataScope != null">
        #{dataScope,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.sys.role.model.SysRoleInfo">
    update sys_role_info
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleKey != null">
        role_key = #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null">
        role_sort = #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="dataScope != null">
        data_scope = #{dataScope,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.sys.role.model.SysRoleInfo">
    update sys_role_info
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_key = #{roleKey,jdbcType=VARCHAR},
      role_sort = #{roleSort,jdbcType=INTEGER},
      data_scope = #{dataScope,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <select id="getList" parameterType="com.blog.sys.role.model.SysRoleInfo" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_role_info
    <where>
      <if test="vo !=null">
        <if test="vo.roleId != null and vo.roleId != '' ">
          role_id = #{vo.roleId,jdbcType=VARCHAR}
        </if>
        <if test="vo.roleName != null and vo.roleName != '' ">
          role_name like CONCAT('%', #{vo.roleName}, '%')
        </if>
        <if test="vo.status != null and vo.status != '' ">
          status = #{vo.status,jdbcType=CHAR}
        </if>
        <if test="vo.delFlag != null and vo.delFlag != '' ">
          del_flag = #{vo.delFlag,jdbcType=CHAR}
        </if>
        <if test="vo.createBy != null and vo.createBy != '' ">
          create_by = #{vo.createBy,jdbcType=VARCHAR}
        </if>
        <if test="vo.updateBy != null and vo.updateBy != '' ">
          update_by = #{vo.updateBy,jdbcType=TIMESTAMP}
        </if>
      </if>
    </where>
  </select>
<!-- 验证角色名称是否唯一 -->
  <select id="checkRoleNameUnique" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
        role_id,role_name
    from sys_role_info
    where role_name = #{roleName,jdbcType=VARCHAR}
  </select>
<!--  验证角色的可以是否唯一  -->
  <select id="checkRoleKeyUnique" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
        role_id,role_key
    from sys_role_info
    where role_key = #{roleKey,jdbcType=VARCHAR}
  </select>
<!--获取最大的排序码-->
  <select id="getMaxSort"  resultType="INTEGER">
    select
        IFNULL(MAX(role_sort),0)
    from sys_role_info
  </select>
<!--  根据用户id查询用户的角色列表-->
  <select id="getRoleListByUserId" parameterType="String"   resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List"/>
    from sys_role_info as sri where exists (select role_id from sys_user_role where sri.role_id=role_id and user_id=#{userId} )
  </select>
</mapper>